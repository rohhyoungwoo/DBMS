-- 계정명 : test01
-- 비밀번호 : 1234
-- 권한 create session, create table, create view, resource;

-- 계정 만들고 a1~a4 테이블 등록 후 문제 풀기
GRANT CREATE SESSION TO TEST01; 

/* 1. JOBS 테이블에서 JOB_ID로 직원들의 JOB_TITLE, EMAIL, 성, 이름 조회 */
SELECT * FROM JOBS;
SELECT * FROM JOB_HISTORY;
SELECT * FROM EMPLOYEES;

SELECT count(*) FROM jobs;
SELECT count(*) FROM EMPLOYEES e ;

--SELECT JOB_ID 아이디, JOB_TITLE 타이틀, EAMAIL 이메일, FIRET_NAME 성, LAST_NAME 이름
--FROM EMPLOYEES;

SELECT J.JOB_ID 아이디 , J.JOB_TITLE 타이틀 , E.EMAIL 이메일, E.FIRST_NAME 성, E.LAST_NAME 이름
FROM JOBS j JOIN EMPLOYEES e
ON J.JOB_ID = E.JOB_ID;
	
	
/* 2. EMPLOYEES 테이블에서 HIREDATE가 2003~2004년까지인 사원의 정보와 부서명 검색 */
SELECT * FROM EMPLOYEES;
SELECT * FROM DEPARTMENTS;
SELECT count(*) FROM EMPLOYEES e ; -- 107행
SELECT count(*) FROM DEPARTMENTS d ; -- 27행

SELECT E.DEPARTMENT_ID, E.HIRE_DATE, E.FIRST_NAME, E.LAST_NAME, E.EMAIL, D.DEPARTMENT_NAME 
FROM EMPLOYEES e JOIN
	(SELECT D.DEPARTMENT_ID, D.DEPARTMENT_NAME FROM DEPARTMENTS d) D
	ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
WHERE HIRE_DATE BETWEEN '2003-01-01' AND '2004-12-31';



/* 3. EMP 테이블에서 ENAME에 L이 있는 사원들의 DNAME과 LOC 검색 */
SELECT * FROM EMP e ;
SELECT * FROM DEPT d ;
SELECT E.ENAME, D.DNAME, D.LOC
FROM EMP E JOIN (SELECT D.DEPTNO, D.DNAME, D.LOC FROM DEPT D) D
	ON E.DEPTNO = D.DEPTNO	
WHERE E.ENAME LIKE '%L%';

/* 4. SCHEDULE 테이블에서 경기 일정이 20120501 ~ 20120502 사이에 있는 경기장 전체 정보 조회 */
SELECT * FROM SCHEDULE s ;
SELECT STADIUM_ID, SCHE_DATE, GUBUN, HOMETEAM_ID, AWAYTEAM_ID, HOME_SCORE, AWAY_SCORE
FROM SCHEDULE s
WHERE SCHE_DATE BETWEEN 20120501 AND 20120502;


/* 5. 축구 선수들 중에서 각 팀 별로 키가 가장 큰 선수들의 전체 정보 조회 */
/* 위 문제를 JOIN없이 풀기
 * (A,B) IN (C, D) : A = C AND B = D */
SELECT * FROM PLAYER p ;
SELECT * FROM TEAM t ;
-- JOIN없이
SELECT PLAYER_ID, PLAYER_NAME, TEAM_ID, E_PLAYER_NAME, NICKNAME, 
JOIN_YYYY, POSITION, BACK_NO, NATION, BIRTH_DATE, SOLAR, HEIGHT, WEIGHT, (SELECT TEAM_ID, MAX(HEIGHT) FROM PLAYER p)
FROM PLAYER
GROUP BY TEAM_ID 
ORDER BY TEAM_ID;

--가장 키가 큰 선수
SELECT PLAYER_ID, PLAYER_NAME, TEAM_ID, E_PLAYER_NAME, NICKNAME, 
JOIN_YYYY, POSITION, BACK_NO, NATION, BIRTH_DATE, SOLAR, HEIGHT, WEIGHT, max(HEIGHT)
FROM PLAYER p 
GROUP BY TEAM_ID, PLAYER_ID, PLAYER_NAME, E_PLAYER_NAME, NICKNAME, 
JOIN_YYYY, POSITION, BACK_NO, NATION, BIRTH_DATE, SOLAR, HEIGHT, WEIGHT
ORDER BY TEAM_ID;


/* 6. EMP 테이블의 SAL을 이용, SALGRAED 테이블을 참고하여 모든 사원의 정보를 GRADE를 포함하여 조회 */


/* 7. EMP 테이블에서 각 사원의 매니저 이름 조회 */


/* 8. 축구 선수들 중에서 각 팀 별로 키가 가장 큰 선수들의 전체 정보 조회 */