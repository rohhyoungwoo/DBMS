-- 집합

-- 결과 6개 행
SELECT * FROM EMP e 
WHERE DEPTNO = 30;

-- 결과 3개 행
SELECT * FROM EMP e 
WHERE DEPTNO = 10;

-- EMP 테이블에서 DEPTNO가 30 또는 10인 데이터를 조회
-- 두 테이블을 UNION(합집합)으로 연결한다
SELECT * FROM EMP 
WHERE DEPTNO = 30
UNION 
SELECT * FROM EMP
WHERE DEPTNO = 10;

-- EMP 테이블에서 SAL 1000DLTKD 2000이하, 1500이상 3000이하의 결과를 같이 조회
SELECT * FROM EMP 
WHERE SAL BETWEEN 1000 AND 2000
UNION
SELECT * FROM EMP 
WHERE SAL BETWEEN 1500 AND 3000;



SELECT * FROM EMP;
SELECT * FROM DEPT;

-- 오류 : 열의 수가 다르면 UNION을 사용할 수 없다
SELECT * FROM EMP
UNION
SELECT * FROM DEPT;

-- 오류 : 열의 타입이 다르면 UNION을 사용할 수 없다
SELECT EMPNO, DEPTNO, JOB FROM EMP
UNION
SELECT DEPNO, DNAME, LOC FROM DEPT;

-- 열의 수와 타입이 일치한다면 UNION이 가능하다
SELECT SAL, ENAME, JOB FROM EMP
UNION
SELECT DEPTNO, DNAME, LOC FROM DEPT;

-- 위쪽 쿼리에 별칭을 주면 결과 테이블의 열 이름으로 사용된다
SELECT DEPTNO 숫자, DNAME 문자, LOC 문자 FROM DEPT
UNION
SELECT SAL, ENAME, JOB FROM EMP;

-- UNION이 두 테이블 합치고 ORDER BY가 실행되므로
-- 합쳐지기 이전의 컬럼명이나 소속을 이용해도 정렬되지 않는다
SELECT EMPNO 번호, ENAME 이름, JOB 직장
FROM EMP E
UNION
SELECT * FROM DEPT D
ORDER BY 번호;
--UNION 열의 수와 타입이 일치해야한다

-- 교집합
SELECT * FROM PLAYER p ;

SELECT PLAYER_NAME 이름, TEAM_ID 팀, HEIGHT 키, WEIGHT 몸무게
FROM PLAYER p 
WHERE HEIGHT BETWEEN 177 AND 185
INTERSECT
SELECT PLAYER_NAME 이름, TEAM_ID 팀, HEIGHT 키, WEIGHT 몸무게
FROM PLAYER p2 
WHERE WEIGHT BETWEEN 76 AND 78;

-- 차집합
SELECT PLAYER_NAME 이름, TEAM_ID 팀, HEIGHT 키, WEIGHT 몸무게
FROM PLAYER p 
WHERE HEIGHT BETWEEN 185 AND 186
MINUS 
SELECT PLAYER_NAME 이름, TEAM_ID 팀, HEIGHT 키, WEIGHT 몸무게
FROM PLAYER p2 
WHERE WEIGHT BETWEEN 76 AND 78;


-- 형 변환 함수
-- TO_CAHR()
SELECT SYSDATE FROM DUAL;

SELECT TO_CHAR(SYSDATE, 'YYYY/MM/DD') FROM DUAL;

SELECT TO_CHAR(SYSDATE, 'YYYY"년 "MM"월 "DD"일"') FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'YYYY/MM/DD-HH24:MI') FROM DUAL;

-- TO NUMBER()
SELECT '1234', TO_NUMBER('1234') FROM DUAL;

SELECT '123' + '123' FROM DUAL;

-- TO_DATE()
SELECT TO_DATE('2300-12-25', 'YYYY-MM-DD') FROM DUAL;


-- view

