-- 집계함수 : 결과 행 1개
-- 주의 사항 : NULL은 포함시키지 않는다

SELECT * FROM employees;

-- count()
-- 전체 직원 수 확인
SELECT COUNT(*)
FROM EMPLOYEES;

-- 특정 부서 101번의 직원 수 확인
SELECT DISTINCT DEPARTMENT_ID
FROM EMPLOYEES;

SELECT COUNT(*) AS "110번의 직원수"
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 110;

-- SUM()
-- 모든 직원의 급여 총합 계산
SELECT SUM(SALARY)
FROM EMPLOYEES;

-- 부서별 급여 총합 계산
SELECT DEPARTMENT_ID, SALARY 
FROM EMPLOYEES;

SELECT DEPARTMENT_ID, SUM(SALARY)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID;

-- AVG()
-- 전체 직원의 평균 급여
SELECT AVG(SALARY)
FROM EMPLOYEES;

-- 부서별 평균 급여
SELECT DEPARTMENT_ID, AVG(SALARY)
FROM EMPLOYEES 
GROUP BY DEPARTMENT_ID;

-- MAX(), MIN()
SELECT MAX(SALARY), MIN(SALARY)
FROM EMPLOYEES;

-- 부서별 최고급여, 최저급여, 평균급여, 총합 조회하기
SELECT 	DEPARTMENT_ID, MAX(SALARY), MIN(SALARY), AVG(SALARY), SUM(SALARY)
FROM EMPLOYEES
GROUP  BY DEPARTMENT_ID;

SELECT *
FROM EMPLOYEES;

SELECT COUNT(NVL(COMMISSION_PCT,0)), COUNT(COMMISSION_PCT)
FROM EMPLOYEES;

-- GROUP BY, HAVING
--  평균 급여가 5000이상인 부서 조회
SELECT DEPARTMENT_ID, AVG(SALARY)
FROM EMPLOYEES
--WHERE SALARY >= 5000
GROUP BY DEPARTMENT_ID;

SELECT DEPARTMENT_ID, AVG(SALARY)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID
HAVING AVG(SALARY) >= 5000;

-- 부서별 급여 총합이 30000보다 작은 부서들만 내림차순으로 정렬
SELECT DEPARTMENT_ID, SUM(SALARY) AS "급여 총합"
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID
HAVING SUM(SALARY) < 50000
ORDER BY "급여 총합" DESC;

-- GROUP BY : ~별
-- GROUP BY 컬럼명 HAVING 조건식
-- WHERE절은 집계함수 불가, HAVING 집계함수 가능

CREATE TABLE tbl_stu( 
   stu_id NUMBER PRIMARY KEY,
   stu_name varchar2(100) NOT NULL,
   stu_phone varchar2(100),
   stu_age NUMBER,
   stu_dept varchar2(100) 
);

SELECT * FROM tbl_stu;

--1) 학과 종류 검색
SELECT DISTINCT STU_DEPT
FROM TBL_STU;

--2) 각 학과별 학생수 조회
SELECT STU_DEPT, COUNT(*)
FROM TBL_STU
GROUP BY STU_DEPT;

--3) 각 학과별 평균나이 조회
SELECT STU_DEPT, AVG(STU_AGE)
FROM TBL_STU
GROUP BY STU_DEPT;

--4) 학과별로 30세 이상인 학생 조회
SELECT STU_DEPT, STU_AGE, STU_NAME, STU_PHONE, STU_ID
FROM TBL_STU
GROUP BY STU_DEPT, STU_AGE, STU_NAME, STU_PHONE, STU_ID
HAVING STU_AGE >= 30;

--5) 학생 이름이 감으로 시작하거나 이로 시작하는 학생들의 학과별 수 조회
SELECT STU_DEPT, COUNT(*)
FROM TBL_STU
WHERE STU_NAME LIKE '감%' OR STU_NAME LIKE '이%'
GROUP BY STU_DEPT;
 
SELECT * FROM tbl_stu;
--6) 컴퓨터 공학과의 학생 중 25살 이상인 학생 수 조회
SELECT STU_DEPT, STU_AGE, COUNT(*)
FROM TBL_STU
WHERE STU_DEPT = '컴퓨터 공학과', STU_AGE >= 25;



INSERT INTO tbl_stu
--VALUES (1, '조승우', '010-8901-8888', 30, '교육학과');
--VALUES (2, '이동욱', '010-9012-9999', 30, '컴퓨터 공학과');
--VALUES (3, '김소현', '010-9876-1234', 20, '방송연예과');
--VALUES (4, '김남길', '010-5050-1222', 26, '컴퓨터 공학과');
--VALUES (5, '강하늘', '010-5111-5151', 22, '방송연예과');
--VALUES (6, '공유', '010-5050-5151', 30, '컴퓨터 공학과');
--VALUES (7, '이종혁', '010-1213-2222', 34, '방송연예과');
--VALUES (8, '박은빈', '010-1213-2222', 20, '방송연예과');

SELECT * FROM tbl_stu;

